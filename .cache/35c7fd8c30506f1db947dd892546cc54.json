{"id":"..\\node_modules\\jju\\lib\\utils.js","dependencies":[{"name":"G:\\Git\\wikitable2csv\\node_modules\\jju\\package.json","includedInParent":true,"mtime":1532619718776},{"name":"G:\\Git\\wikitable2csv\\package.json","includedInParent":true,"mtime":1532619718937},{"name":"G:\\Git\\wikitable2csv\\.babelrc","includedInParent":true,"mtime":1532619149197},{"name":"fs","loc":{"line":1,"column":18},"parent":"G:\\Git\\wikitable2csv\\node_modules\\jju\\lib\\utils.js","resolved":"C:\\Users\\Gregor\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"},{"name":"../","loc":{"line":2,"column":18},"parent":"G:\\Git\\wikitable2csv\\node_modules\\jju\\lib\\utils.js","resolved":"G:\\Git\\wikitable2csv\\node_modules\\jju\\index.js"},{"name":"jju","optional":true,"loc":{"line":24,"column":14},"parent":"G:\\Git\\wikitable2csv\\node_modules\\jju\\lib\\utils.js","resolved":"G:\\Git\\wikitable2csv\\node_modules\\jju\\index.js"}],"generated":{"js":"var FS  = require('fs')\nvar jju = require('../')\n\n// this function registers json5 extension, so you\n// can do `require(\"./config.json5\")` kind of thing\nmodule.exports.register = function() {\n  var r = require, e = 'extensions'\n  r[e]['.json5'] = function(m, f) {\n    /*eslint no-sync:0*/\n    m.exports = jju.parse(FS.readFileSync(f, 'utf8'))\n  }\n}\n\n// this function monkey-patches JSON.parse, so it\n// will return an exact position of error in case\n// of parse failure\nmodule.exports.patch_JSON_parse = function() {\n  var _parse = JSON.parse\n  JSON.parse = function(text, rev) {\n    try {\n      return _parse(text, rev)\n    } catch(err) {\n      // this call should always throw\n      require('jju').parse(text, {\n        mode: 'json',\n        legacy: true,\n        reviver: rev,\n        reserved_keys: 'replace',\n        null_prototype: false,\n      })\n\n      // if it didn't throw, but original parser did,\n      // this is an error in this library and should be reported\n      throw err\n    }\n  }\n}\n\n// this function is an express/connect middleware\n// that accepts uploads in application/json5 format\nmodule.exports.middleware = function() {\n  return function(req, res, next) {\n    throw Error('this function is removed, use express-json5 instead')\n  }\n}\n\n","map":{"mappings":[{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"..\\node_modules\\jju\\lib\\utils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}}],"sources":{"..\\node_modules\\jju\\lib\\utils.js":"var FS  = require('fs')\nvar jju = require('../')\n\n// this function registers json5 extension, so you\n// can do `require(\"./config.json5\")` kind of thing\nmodule.exports.register = function() {\n  var r = require, e = 'extensions'\n  r[e]['.json5'] = function(m, f) {\n    /*eslint no-sync:0*/\n    m.exports = jju.parse(FS.readFileSync(f, 'utf8'))\n  }\n}\n\n// this function monkey-patches JSON.parse, so it\n// will return an exact position of error in case\n// of parse failure\nmodule.exports.patch_JSON_parse = function() {\n  var _parse = JSON.parse\n  JSON.parse = function(text, rev) {\n    try {\n      return _parse(text, rev)\n    } catch(err) {\n      // this call should always throw\n      require('jju').parse(text, {\n        mode: 'json',\n        legacy: true,\n        reviver: rev,\n        reserved_keys: 'replace',\n        null_prototype: false,\n      })\n\n      // if it didn't throw, but original parser did,\n      // this is an error in this library and should be reported\n      throw err\n    }\n  }\n}\n\n// this function is an express/connect middleware\n// that accepts uploads in application/json5 format\nmodule.exports.middleware = function() {\n  return function(req, res, next) {\n    throw Error('this function is removed, use express-json5 instead')\n  }\n}\n\n"},"lineCount":47}},"hash":"607fc852e5c6a338b266bfc93e69c6b2","cacheData":{"env":{}}}